package TPPet;

import jakarta.persistence.*;
import java.util.Date;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("petstore");
        EntityManager em = emf.createEntityManager();

        // Créer et persister des entités ici

        // Créer des instances de ProdType
        ProdType prodType1 = new ProdType();
        prodType1.setType("FOOD");
        ProdType prodType2 = new ProdType();
        prodType2.setType("ACCESSORY");
        ProdType prodType3 = new ProdType();
        prodType3.setType("CLEANING");

        // Persister les instances de ProdType
        em.getTransaction().begin();
        em.persist(prodType1);
        em.persist(prodType2);
        em.persist(prodType3);
        em.getTransaction().commit();

        // Créer des instances de Product
        Product product1 = new Product();
        product1.setCode("P001");
        product1.setLabel("Product 1");
        product1.setType(prodType1);
        product1.setPrice(10.0);
        Product product2 = new Product();
        product2.setCode("P002");
        product2.setLabel("Product 2");
        product2.setType(prodType2);
        product2.setPrice(20.0);
        Product product3 = new Product();
        product3.setCode("P003");
        product3.setLabel("Product 3");
        product3.setType(prodType3);
        product3.setPrice(30.0);

        // Persister les instances de Product
        em.getTransaction().begin();
        em.persist(product1);
        em.persist(product2);
        em.persist(product3);
        em.getTransaction().commit();

        // Créer des instances de PetStore
        PetStore petStore1 = new PetStore();
        petStore1.setName("PetStore 1");
        petStore1.setManagerName("Manager 1");
        PetStore petStore2 = new PetStore();
        petStore2.setName("PetStore 2");
        petStore2.setManagerName("Manager 2");
        PetStore petStore3 = new PetStore();
        petStore3.setName("PetStore 3");
        petStore3.setManagerName("Manager 3");

        // Persister les instances de PetStore
        em.getTransaction().begin();
        em.persist(petStore1);
        em.persist(petStore2);
        em.persist(petStore3);
        em.getTransaction().commit();

        // Créer des instances de Address
        Address address1 = new Address();
        address1.setNumber("1");
        address1.setStreet("Street 1");
        address1.setZipCode("12345");
        address1.setCity("City 1");
        Address address2 = new Address();
        address2.setNumber("2");
        address2.setStreet("Street 2");
        address2.setZipCode("67890");
        address2.setCity("City 2");
        Address address3 = new Address();
        address3.setNumber("3");
        address3.setStreet("Street 3");
        address3.setZipCode("11111");
        address3.setCity("City 3");

        // Persister les instances de Address
        em.getTransaction().begin();
        em.persist(address1);
        em.persist(address2);
        em.persist(address3);
        em.getTransaction().commit();

        // Créer des instances de Animal
        Animal animal1 = new Animal();
        animal1.setBirth(new Date());
        animal1.setColor("Black");
        Animal animal2 = new Animal();
        animal2.setBirth(new Date());
        animal2.setColor("White");
        Animal animal3 = new Animal();
        animal3.setBirth(new Date());
        animal3.setColor("Brown");

        // Persister les instances de Animal
        em.getTransaction().begin();
        em.persist(animal1);
        em.persist(animal2);
        em.persist(animal3);
        em.getTransaction().commit();

        // Ajouter des relations entre PetStore et les autres entités
        petStore1.getProducts().add(product1);
        petStore1.getProducts().add(product2);
        petStore1.getAnimals().add(animal1);
        petStore1.getAddresses().add(address1);

        petStore2.getProducts().add(product2);
        petStore2.getProducts().add(product3);
        petStore2.getAnimals().add(animal2);
        petStore2.getAddresses().add(address2);

        petStore3.getProducts().add(product3);
        petStore3.getProducts().add(product1);
        petStore3.getAnimals().add(animal3);
        petStore3.getAddresses().add(address3);

        // Mettre à jour les instances de PetStore
        em.getTransaction().begin();
        em.merge(petStore1);
        em.merge(petStore2);
        em.merge(petStore3);
        em.getTransaction().commit();

        // Récupérer tous les animaux d'une animalerie donnée
        String jpqlQuery = "SELECT a FROM Animal a JOIN a.petStores ps WHERE ps.id = :petStoreId";
        Query query = em.createQuery(jpqlQuery);
        query.setParameter("petStoreId", petStore1.getId()); // Remplacer petStore1.getId() par l'ID de l'animalerie souhaitée
        List<Animal> animals = query.getResultList();

        // Afficher les animaux
        for (Animal animal : animals) {
            System.out.println("Animal: " + animal.getId() + ", birth: " + animal.getBirth() + ", color: " + animal.getColor());
        }

        em.close();
        emf.close();
    }
}




package TPPet;

import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.Persistence;
import java.util.Date;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("petstore");
        EntityManager em = emf.createEntityManager();

        em.getTransaction().begin();

        // Créer et persister des entités
        PetStore petStore = new PetStore();
        petStore.setName("PetStore1");
        petStore.setManagerName("Manager1");

        Product product1 = new Product();
        product1.setCode("P001");
        product1.setLabel("Product1");
        product1.setType(ProdType.FOOD);
        product1.setPrice(10.0);

        Product product2 = new Product();
        product2.setCode("P002");
        product2.setLabel("Product2");
        product2.setType(ProdType.ACCESSORY);
        product2.setPrice(20.0);

        Product product3 = new Product();
        product3.setCode("P003");
        product3.setLabel("Product3");
        product3.setType(ProdType.CLEANING);
        product3.setPrice(30.0);

        petStore.getProducts().add(product1);
        petStore.getProducts().add(product2);
        petStore.getProducts().add(product3);

        product1.getPetStores().add(petStore);
        product2.getPetStores().add(petStore);
        product3.getPetStores().add(petStore);

        em.persist(petStore);
        em.persist(product1);
        em.persist(product2);
        em.persist(product3);

        // Réaliser une requête pour extraire tous les animaux d'une animalerie donnée
        List<Animal> animals = em.createQuery("SELECT a FROM Animal a JOIN a.petStores ps WHERE ps.id = :petStoreId", Animal.class)
                .setParameter("petStoreId", petStore.getId())
                .getResultList();

        em.getTransaction().commit();

        System.out.println("Animals in PetStore1:");
        for (Animal animal : animals) {
            System.out.println(animal.getClass().getSimpleName() + ": " + animal.getId());
        }

        em.close();
        emf.close();
    }
}
